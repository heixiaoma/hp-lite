//定义版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: CmdMessage.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举消息类型
type CmdMessage_CmdMessageType int32

const (
	//连接设备
	CmdMessage_CONNECT CmdMessage_CmdMessageType = 0
	//断开设备
	CmdMessage_DISCONNECT CmdMessage_CmdMessageType = 1
	//本地内穿
	CmdMessage_LOCAL_INNER_WEAR CmdMessage_CmdMessageType = 2
	//提示信息
	CmdMessage_TIPS CmdMessage_CmdMessageType = 3
)

// Enum value maps for CmdMessage_CmdMessageType.
var (
	CmdMessage_CmdMessageType_name = map[int32]string{
		0: "CONNECT",
		1: "DISCONNECT",
		2: "LOCAL_INNER_WEAR",
		3: "TIPS",
	}
	CmdMessage_CmdMessageType_value = map[string]int32{
		"CONNECT":          0,
		"DISCONNECT":       1,
		"LOCAL_INNER_WEAR": 2,
		"TIPS":             3,
	}
)

func (x CmdMessage_CmdMessageType) Enum() *CmdMessage_CmdMessageType {
	p := new(CmdMessage_CmdMessageType)
	*p = x
	return p
}

func (x CmdMessage_CmdMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CmdMessage_CmdMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_CmdMessage_proto_enumTypes[0].Descriptor()
}

func (CmdMessage_CmdMessageType) Type() protoreflect.EnumType {
	return &file_CmdMessage_proto_enumTypes[0]
}

func (x CmdMessage_CmdMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CmdMessage_CmdMessageType.Descriptor instead.
func (CmdMessage_CmdMessageType) EnumDescriptor() ([]byte, []int) {
	return file_CmdMessage_proto_rawDescGZIP(), []int{0, 0}
}

type CmdMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//消息类型
	Type CmdMessage_CmdMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=net.hserver.hp.common.protocol.CmdMessage_CmdMessageType" json:"type,omitempty"`
	//用户key
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	//交互数据
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	//程序版本
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CmdMessage) Reset() {
	*x = CmdMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CmdMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdMessage) ProtoMessage() {}

func (x *CmdMessage) ProtoReflect() protoreflect.Message {
	mi := &file_CmdMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdMessage.ProtoReflect.Descriptor instead.
func (*CmdMessage) Descriptor() ([]byte, []int) {
	return file_CmdMessage_proto_rawDescGZIP(), []int{0}
}

func (x *CmdMessage) GetType() CmdMessage_CmdMessageType {
	if x != nil {
		return x.Type
	}
	return CmdMessage_CONNECT
}

func (x *CmdMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CmdMessage) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CmdMessage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_CmdMessage_proto protoreflect.FileDescriptor

var file_CmdMessage_proto_rawDesc = []byte{
	0x0a, 0x10, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x6e, 0x65, 0x74, 0x2e, 0x68, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x68, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x68, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x68, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x4d, 0x0a, 0x0e, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x57,
	0x45, 0x41, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x50, 0x53, 0x10, 0x03, 0x42,
	0x1e, 0x42, 0x0e, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x5a, 0x0c, 0x2e, 0x2f, 0x43, 0x6d, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CmdMessage_proto_rawDescOnce sync.Once
	file_CmdMessage_proto_rawDescData = file_CmdMessage_proto_rawDesc
)

func file_CmdMessage_proto_rawDescGZIP() []byte {
	file_CmdMessage_proto_rawDescOnce.Do(func() {
		file_CmdMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_CmdMessage_proto_rawDescData)
	})
	return file_CmdMessage_proto_rawDescData
}

var file_CmdMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_CmdMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_CmdMessage_proto_goTypes = []interface{}{
	(CmdMessage_CmdMessageType)(0), // 0: net.hserver.hp.common.protocol.CmdMessage.CmdMessageType
	(*CmdMessage)(nil),             // 1: net.hserver.hp.common.protocol.CmdMessage
}
var file_CmdMessage_proto_depIdxs = []int32{
	0, // 0: net.hserver.hp.common.protocol.CmdMessage.type:type_name -> net.hserver.hp.common.protocol.CmdMessage.CmdMessageType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_CmdMessage_proto_init() }
func file_CmdMessage_proto_init() {
	if File_CmdMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CmdMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CmdMessage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CmdMessage_proto_goTypes,
		DependencyIndexes: file_CmdMessage_proto_depIdxs,
		EnumInfos:         file_CmdMessage_proto_enumTypes,
		MessageInfos:      file_CmdMessage_proto_msgTypes,
	}.Build()
	File_CmdMessage_proto = out.File
	file_CmdMessage_proto_rawDesc = nil
	file_CmdMessage_proto_goTypes = nil
	file_CmdMessage_proto_depIdxs = nil
}
